[user]
  name = ${user_name}
  email = ${user_email}
[github]
  user = ${github_username}
[diff]
  renames = copies
[color]
  branch = auto
  diff = auto
  status = true
  ui = true
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[alias]
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  clg = log --pretty=format:"%h%x09%an%x09%ad%x09%s"
  slg = log --name-status --pretty=oneline
  flg = log --graph --pretty=format:'%Cblue%h%d%Creset %ar %Cgreen%an%Creset %s'
  f = fetch -v
  co = checkout
  s = status
  st = stash
  c = commit
  d = diff
  a = add
  b = branch
  l = log
  m = merge
  p = push
  rb = rebase
  r = reset
  sh = show
  t = tag
  w = whatchanged -p
  cp = cherry-pick
  ch = cherry
  bp = buildpackage
  gh = !sh -c 'git clone git://github.com/$1/$2.git' -
  up = pull --rebase
  reopen = !sh -c 'mvim -p $(git d --name-only HEAD~1..HEAD)' -
  dn = diff --name-only
  echo-remote-proto-and-host = "!f(){ REMOTE=origin; git remote -v | grep $REMOTE | head -n1 | sed -E \"s/^$REMOTE\\t+([a-z]+):\\/\\/([^\\/]+).*/protocol=\\1\\nhost=\\2/\";};f"
  clear-credentials = "!f(){ git echo-remote-proto-and-host | git credential-osxkeychain erase ;};f"
  get-credentials = "!f(){ git echo-remote-proto-and-host | git credential-osxkeychain get ;};f"
  update-password = "!f(){ (git echo-remote-proto-and-host; git get-credentials) | sed \"s/password=.*/password=$1/\" | git credential-osxkeychain store ;};f"
[push]
  default = current
[credential]
  helper = osxkeychain
[branch]
  sort = -committerdate
[rebase]
  autosquash = true
[pull]
	rebase = true
[advice]
	skippedCherryPicks = false
