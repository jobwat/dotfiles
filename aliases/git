#!/bin/bash

# git aliases and functions

# note: few of the following require handy functions `current_branch` & `git_main_branch` to be defined
# see https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh

# more aliases
alias gl='if [[ $(current_branch) = $(git_main_branch) ]]; then git fetch --prune; fi; git pull origin $(current_branch);'
alias gpnp='gpull && gp' # pull and push
alias gspnp='gpull --autostash && gp' # thx Dam5s

# remove all merged branch from origin - thx https://gist.github.com/schacon/942899
alias gdelete_merged='git branch -r --merged | grep "^origin/" | grep -vE "(>|main|master|feature)" | xargs -L1 | cut -d"/" -f2- | xargs git push origin --delete'

# open github project directly - hub is amazing - `brew install hub`
function gbrowse(){
  if [ -n "$1" ]; then
    if [[ "$1" =~ \b[0-9a-f]{5,40}\b ]]; then
      hub browse -- commit/$1
    else
      hub browse -- blob/$(git_main_branch)/$1
    fi
  else
    hub browse
  fi
}
# create github PR from the command line
alias gpr='hub pull-request --push --edit --file <(git log --oneline --format=%B -n 1 HEAD && [ -f .github/PULL_REQUEST_TEMPLATE.md ] && echo && cat .github/PULL_REQUEST_TEMPLATE.md)'

# delete branch locally and on all remotes
function del_branch(){
  branch=$1
  git branch -D $branch
  for remote in $(git remote); do
    git push $remote :$branch
  done
}

git_commit_fixup () {
  # use $1 as gitref or fallback to fzf
  gitref=$1
  [ -z $gitref ] && gitref="$(git log --oneline | fzf --preview "echo {} | awk '{print \$1}' | xargs -I % sh -c 'git show --color=always %'" | awk '{print $1}')"
  git commit --fixup=$gitref --no-verify
  git rebase --autosquash --autostash ${gitref}~1
}
alias gcfu=git_commit_fixup
